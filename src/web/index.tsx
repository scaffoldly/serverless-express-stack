import { Request, Response, NextFunction } from 'express';
import { Path } from 'path-parser';
import * as React from 'react';
import { renderToString } from 'react-dom/server';

import App from './App';
import css from './App.css';
import { ConfigContext } from './components/ConfigContext';
import config from './config';

/** Webpack `stats.json` file structure */
export type Stats = {
  scripts: string[];
  styles: string[];
};

const render = async (): Promise<string> => {
  // The stats are generated by the Webpack Stats Plugin (`webpack-stats-plugin`)
  // const stats = (await import("../../dist/stats.json")) as unknown as Stats;
  const content = renderToString(
    <ConfigContext.Provider value={config}>
      <App />
    </ConfigContext.Provider>,
  );

  const stats: Stats = { scripts: [], styles: [] };

  return `<!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="utf-8" />
      <meta name="viewport" content="minimum-scale=1, initial-scale=1, width=device-width" />
      <meta name="theme-color" content="${config.app.THEME_COLOR}" />
      <title>${config.app.TITLE}</title>
      <link rel="manifest" href="${config.app.PUBLIC_URL}/manifest.json" />
      <link rel="shortcut icon" href="${config.app.PUBLIC_URL}/favicon.ico" />
      ${stats.styles
        .map(
          (filename) =>
            `<link rel="stylesheet" href="${config.app.DIST_URL}/${filename}" />`,
        )
        .join('\n')}
      <style id="jss-server-side">${css}</style>
      <script id="config-server-side">
        window.__CONFIG__ = ${JSON.stringify(config)};
      </script>
    </head>
    <body>
      <div id="root">${content}</div>
      ${stats.scripts
        .map(
          (filename) =>
            `<script src="${config.app.DIST_URL}/${filename}" crossorigin></script>`,
        )
        .join('\n')}
    </body>
  </html>`;
};

export function webHandler() {
  return async (
    req: Request,
    res: Response,
    next: NextFunction,
  ): Promise<void> => {
    if (req.method !== 'GET') {
      next();
      return;
    }

    if (new Path('/').test(req.path)) {
      res.type('html');
      const contents = await render();
      res.send(contents);
      return;
    }

    next();
  };
}
